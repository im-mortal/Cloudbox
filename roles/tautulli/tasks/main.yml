#########################################################################
# Title:         Cloudbox: Tautulli Role                                  #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  tautulli/tautulli                                      #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    subdomain: tautulli
  when: cloudflare_enabled

- name: Stop and remove any existing container
  docker_container:
    name: tautulli
    state: absent

- name: Wait for Plex Logs folder to be created by Plex
  wait_for:
    path: "/opt/plex/Library/Application Support/Plex Media Server/Logs"
    state: present
  when: (not continuous_integration)

- name: Create tautulli directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/tautulli
    - /opt/scripts/tautulli

- name: Create and start container
  docker_container:
    name: tautulli
    image: "tautulli/tautulli:latest"
    pull: yes
    env:
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      VIRTUAL_HOST: "tautulli.{{ user.domain }}"
      VIRTUAL_PORT: 8181
      LETSENCRYPT_HOST: "tautulli.{{ user.domain }}"
      LETSENCRYPT_EMAIL: "{{ user.email }}"
      TZ: "{{ tz }}"
    volumes:
      - "/opt/tautulli:/config"
      - "/opt/plex/Library/Application Support/Plex Media Server/Logs:/logs:ro"
      - "/opt/scripts:/scripts"
    labels:
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - tautulli
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
